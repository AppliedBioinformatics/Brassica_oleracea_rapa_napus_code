xlim(-300, 250)
# plot a shared big figure
wrap_plots(all_cs) + plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 12, hjust = 0, vjust = 0)) &
ylim(-450, 400) &
xlim(-350, 250)
# plot a shared big figure
wrap_plots(all_cs) + plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 12, hjust = 0, vjust = 0)) &
ylim(-450, 400) &
xlim(-4000, 250)
# plot a shared big figure
wrap_plots(all_cs) + plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 12, hjust = 0, vjust = 0)) &
ylim(-450, 400) &
xlim(-400, 250)
# plot a shared big figure
wrap_plots(all_cs) + plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 12, hjust = 0, vjust = 0)) &
ylim(-450, 400) &
xlim(-450, 250)
# plot a shared big figure
wrap_plots(all_cs) + plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 12, hjust = 0, vjust = 0)) &
ylim(-450, 400) &
xlim(-5000, 250)
# plot a shared big figure
wrap_plots(all_cs) + plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 12, hjust = 0, vjust = 0)) &
ylim(-450, 400) &
xlim(-500, 250)
save_plot('C_genome_faceted_PCA.png', p,
base_height = 5,
base_aspect_ratio = 1.3) # make room for figure legend
# plot a shared big figure
all_p <- wrap_plots(all_cs) + plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 12, hjust = 0, vjust = 0)) &
ylim(-450, 400) &
xlim(-500, 250)
save_plot('C_genome_faceted_PCA.png', all_p,
base_height = 5,
base_aspect_ratio = 1.3) # make room for figure legend
save_plot('C_genome_faceted_PCA.png', all_p,
base_height = 8,
base_aspect_ratio = 1.3) # make room for figure legend
# now do the same for the A genome split
# First, run the PCA for each subgroup in teh C genome
filenames <-
dir('SplitA', pattern = "Napus_PAV_A_R_Format_Split*", full.names = TRUE)
filenames
# now do the same for the A genome split
# First, run the PCA for each subgroup in teh C genome
filenames <-
dir('SplitA', pattern = "*", full.names = TRUE)
filenames
filenames <-
filenames[!str_detect(filenames, 'chr')]
filenames
# now do the same for the A genome split
# First, run the PCA for each subgroup in teh C genome
filenames <-
dir('SplitA', pattern = "*", full.names = TRUE)
filenames
filenames <-
filenames[str_detect(filenames, 'chr')]
filenames
big_pc <- data.frame() # stores chromosome, pc1, pc2
all_pcs <- data.frame() # stores only pc1
all_p <- list()
sample_type
sample_type$Individual
big_pc <- data.frame() # stores chromosome, pc1, pc2
all_pcs <- data.frame() # stores only pc1
all_p <- list()
for (i in 1:length(filenames)) {
thisfile <- filenames[i]
a_t <- fread(thisfile, sep = '\t', header = T)
a_t.m <- as.matrix(sapply(a_t, as.numeric))
rownames(a_t.m) <- sample_type$Individual
a_logsvd_model <- logisticSVD(a_t.m, k = 2, quiet = F, partial_decomp = TRUE)
p <- plot(a_logsvd_model, type = 'scores') +
geom_point(aes(colour = factor(
sample_species$type,
labels = c('B. napus',
'B. rapa',
'B. rapa FPSc',
'Synthetic\nB. napus')
))) +
labs(colour = "Species") +
theme(legend.text = element_text(face = 'italic')) +
guides(colour = guide_legend(
keywidth = 0.1,
keyheight = 0.35,
default.unit = 'inch'
))
save_plot(paste(thisfile, '.png', sep = ''), p,
base_height = 5,
base_aspect_ratio = 1.3) # make room for figure legend
pc1 <- a_logsvd_model$A[,1]
all_pcs <- rbind(all_pcs, as.data.frame(t(pc1)))
thisframe <- as.data.frame(cbind(thisfile, a_logsvd_model$A, sample_species$type))
big_pc <- bind_rows(big_pc, thisframe)
}
sample_type
# keep only napus/rapa individuals
all_st.a <- all_st %>% filter(!grepl('Brassica_oleracea', Individual))
names(all_st.a)[1:5]
# pull out column of individual names
sample_type <- all_st.a$Individual
sample_type
# make data frame from column
sample_type <- data.frame(Individual=sample_type, stringsAsFactors=FALSE)
synth_check <- paste0(synthetic_lines$X1, collapse='|')
fpsc_check <- paste0(fpsc_lines$X1, collapse='|')
sample_type
# detect species
sample_species <- sample_type %>% mutate(type = ifelse(
str_detect(Individual, synth_check),
'Synth',
ifelse(
str_detect(Individual, fpsc_check),
'FPSc',
ifelse(
str_detect(Individual, 'Brassica_rapa'),
'B_rapa',
ifelse(
str_detect(Individual, 'Brassica_oleracea'),
'B_oleracea',
ifelse(
str_detect(Individual, 'Brassica_napus'),
'B_napus',
ifelse(str_detect(Individual, 'Harsh'),
'B_napus',
'NOPE')
)
)
)
)
)) %>% dplyr::select(type)
# double check species
sample_species %>% table()
# pull out only A genome genes
all_st.a <- all_st.a %>%  dplyr::select(starts_with('evm.model.chrA'))
#convert to MATRIX, run SVD
all_st.a_t.m <- as.matrix(sapply(all_st.a, as.numeric))
# back to PCA
alla_logsvd_model <- logisticSVD(all_st.a_t.m, k = 2, quiet = F, partial_decomp = TRUE)
# now do the same for the A genome split
# First, run the PCA for each subgroup in teh C genome
filenames <-
dir('SplitA', pattern = "*", full.names = TRUE)
filenames <- filenames[str_detect(filenames, 'chr')]
big_pc <- data.frame() # stores chromosome, pc1, pc2
all_pcs <- data.frame() # stores only pc1
all_p <- list()
for (i in 1:length(filenames)) {
thisfile <- filenames[i]
a_t <- fread(thisfile, sep = '\t', header = T)
a_t.m <- as.matrix(sapply(a_t, as.numeric))
rownames(a_t.m) <- sample_type$Individual
a_logsvd_model <- logisticSVD(a_t.m, k = 2, quiet = F, partial_decomp = TRUE)
p <- plot(a_logsvd_model, type = 'scores') +
geom_point(aes(colour = factor(
sample_species$type,
labels = c('B. napus',
'B. rapa',
'B. rapa FPSc',
'Synthetic\nB. napus')
))) +
labs(colour = "Species") +
theme(legend.text = element_text(face = 'italic')) +
guides(colour = guide_legend(
keywidth = 0.1,
keyheight = 0.35,
default.unit = 'inch'
))
save_plot(paste(thisfile, '.png', sep = ''), p,
base_height = 5,
base_aspect_ratio = 1.3) # make room for figure legend
pc1 <- a_logsvd_model$A[,1]
all_pcs <- rbind(all_pcs, as.data.frame(t(pc1)))
thisframe <- as.data.frame(cbind(thisfile, a_logsvd_model$A, sample_species$type))
big_pc <- bind_rows(big_pc, thisframe)
}
thisfile <- filenames[i]
a_t <- fread(thisfile, sep = '\t', header = T)
a_t.m <- as.matrix(sapply(a_t, as.numeric))
rownames(a_t.m) <- sample_type$Individual
dim(a_t.m)
dim(sample_type)
# pull out column of individual names
sample_type <- all_st.a$Individual
sample_type
# keep only napus/rapa individuals
all_st.a <- all_st %>% filter(!grepl('Brassica_oleracea', Individual))
names(all_st.a)[1:5]
# pull out column of individual names
sample_type <- all_st.a$Individual
sample_type
# make data frame from column
sample_type <- data.frame(Individual=sample_type, stringsAsFactors=FALSE)
sample_type
sample_type$Individual
dim(sample_type)
dim(a_t.m)
a_t.m
a_t
names(a_t)
names(a_t)[1:5]
a_t$Individual
thisfile <- filenames[i]
a_t <- fread(thisfile, sep = '\t', header = T)
a_t <- a_t %>% filter(!grepl('Brassica_oleracea', Individual))
#c_t %>% head(2) %>% tail(1)
a_t$Individual <- NULL
a_t.m <- as.matrix(sapply(a_t, as.numeric))
rownames(a_t.m) <- sample_type$Individual
a_logsvd_model <- logisticSVD(a_t.m, k = 2, quiet = F, partial_decomp = TRUE)
for (i in 1:length(filenames)) {
thisfile <- filenames[i]
a_t <- fread(thisfile, sep = '\t', header = T)
a_t <- a_t %>% filter(!grepl('Brassica_oleracea', Individual))
a_t$Individual <- NULL
a_t.m <- as.matrix(sapply(a_t, as.numeric))
rownames(a_t.m) <- sample_type$Individual
a_logsvd_model <- logisticSVD(a_t.m, k = 2, quiet = F, partial_decomp = TRUE)
p <- plot(a_logsvd_model, type = 'scores') +
geom_point(aes(colour = factor(
sample_species$type,
labels = c('B. napus',
'B. rapa',
'B. rapa FPSc',
'Synthetic\nB. napus')
))) +
labs(colour = "Species") +
theme(legend.text = element_text(face = 'italic')) +
guides(colour = guide_legend(
keywidth = 0.1,
keyheight = 0.35,
default.unit = 'inch'
))
all_p[[i]] <- p
save_plot(paste(thisfile, '.png', sep = ''), p,
base_height = 5,
base_aspect_ratio = 1.3) # make room for figure legend
pc1 <- a_logsvd_model$A[,1]
all_pcs <- rbind(all_pcs, as.data.frame(t(pc1)))
thisframe <- as.data.frame(cbind(thisfile, a_logsvd_model$A, sample_species$type))
big_pc <- bind_rows(big_pc, thisframe)
}
all_p <- wrap_plots(all_p) + plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 12, hjust = 0, vjust = 0)) &
#ylim(-450, 400) &
#xlim(-500, 250)
NULL
all_p
for (i in 1:length(filenames)) {
thisfile <- filenames[i]
a_t <- fread(thisfile, sep = '\t', header = T)
a_t <- a_t %>% filter(!grepl('Brassica_oleracea', Individual))
a_t$Individual <- NULL
a_t.m <- as.matrix(sapply(a_t, as.numeric))
rownames(a_t.m) <- sample_type$Individual
a_logsvd_model <- logisticSVD(a_t.m, k = 2, quiet = F, partial_decomp = TRUE)
p <- plot(a_logsvd_model, type = 'scores') +
geom_point(aes(colour = factor(
sample_species$type,
labels = c('B. napus',
'B. rapa',
'B. rapa FPSc',
'Synthetic\nB. napus')
))) +
labs(colour = "Species") +
theme(legend.text = element_text(face = 'italic')) +
guides(colour = guide_legend(
keywidth = 0.1,
keyheight = 0.35,
default.unit = 'inch'
))
all_p[[i]] <- p
save_plot(paste(thisfile, '.png', sep = ''), p,
base_height = 5,
base_aspect_ratio = 1.3) # make room for figure legend
pc1 <- a_logsvd_model$A[,1]
all_pcs <- rbind(all_pcs, as.data.frame(t(pc1)))
thisframe <- as.data.frame(cbind(thisfile, a_logsvd_model$A, sample_species$type))
big_pc <- bind_rows(big_pc, thisframe)
}
big_pc <- data.frame() # stores chromosome, pc1, pc2
all_pcs <- data.frame() # stores only pc1
all_p <- list()
for (i in 1:length(filenames)) {
thisfile <- filenames[i]
a_t <- fread(thisfile, sep = '\t', header = T)
a_t <- a_t %>% filter(!grepl('Brassica_oleracea', Individual))
a_t$Individual <- NULL
a_t.m <- as.matrix(sapply(a_t, as.numeric))
rownames(a_t.m) <- sample_type$Individual
a_logsvd_model <- logisticSVD(a_t.m, k = 2, quiet = F, partial_decomp = TRUE)
p <- plot(a_logsvd_model, type = 'scores') +
geom_point(aes(colour = factor(
sample_species$type,
labels = c('B. napus',
'B. rapa',
'B. rapa FPSc',
'Synthetic\nB. napus')
))) +
labs(colour = "Species") +
theme(legend.text = element_text(face = 'italic')) +
guides(colour = guide_legend(
keywidth = 0.1,
keyheight = 0.35,
default.unit = 'inch'
))
all_p[[i]] <- p
save_plot(paste(thisfile, '.png', sep = ''), p,
base_height = 5,
base_aspect_ratio = 1.3) # make room for figure legend
pc1 <- a_logsvd_model$A[,1]
all_pcs <- rbind(all_pcs, as.data.frame(t(pc1)))
thisframe <- as.data.frame(cbind(thisfile, a_logsvd_model$A, sample_species$type))
big_pc <- bind_rows(big_pc, thisframe)
}
all_plots <- wrap_plots(all_p) + plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 12, hjust = 0, vjust = 0)) &
#ylim(-450, 400) &
#xlim(-500, 250)
NULL
all_plots <- wrap_plots(all_p) + plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 12, hjust = 0, vjust = 0)) &
ylim(350, 200) &
#xlim(-500, 250)
NULL
all_plots
all_plots <- wrap_plots(all_p) + plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 12, hjust = 0, vjust = 0)) &
ylim(350, 300) &
#xlim(-500, 250)
NULL
all_plots
all_plots <- wrap_plots(all_p) + plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 12, hjust = 0, vjust = 0)) &
ylim(-350, 300) &
#xlim(-500, 250)
NULL
all_plots
all_plots <- wrap_plots(all_p) + plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 12, hjust = 0, vjust = 0)) &
ylim(-350, 250) &
#xlim(-500, 250)
NULL
all_plots
all_plots <- wrap_plots(all_p) + plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 12, hjust = 0, vjust = 0)) &
ylim(-350, 300) &
#xlim(-500, 250)
NULL
all_plots <- wrap_plots(all_p) + plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 12, hjust = 0, vjust = 0)) &
ylim(-350, 300) &
xlim(-500, 250)
NULL
all_plots
all_plots <- wrap_plots(all_p) + plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 12, hjust = 0, vjust = 0)) &
ylim(-350, 300) &
xlim(-500, 300)
all_plots
all_plots <- wrap_plots(all_p) + plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 12, hjust = 0, vjust = 0)) &
ylim(-350, 300) &
xlim(-500, 350)
all_plots
all_plots <- wrap_plots(all_p) + plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 12, hjust = 0, vjust = 0)) &
ylim(-350, 300) &
xlim(-550, 350)
all_plots
all_plots <- wrap_plots(all_p) + plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 12, hjust = 0, vjust = 0)) &
ylim(-350, 300) &
xlim(-5550, 350)
all_plots
all_plots <- wrap_plots(all_p) + plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 12, hjust = 0, vjust = 0)) &
ylim(-350, 300) &
xlim(-500, 400)
all_plots
all_plots <- wrap_plots(all_p) + plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 12, hjust = 0, vjust = 0)) &
ylim(-350, 300) &
xlim(-450, 400)
all_plots
all_plots <- wrap_plots(all_p) + plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 12, hjust = 0, vjust = 0)) &
ylim(-350, 300) &
xlim(-400, 400)
all_plots
all_plots <- wrap_plots(all_p) + plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 12, hjust = 0, vjust = 0)) &
ylim(-350, 300) &
xlim(-450, 400)
all_plots
save_plot('A_genome_faceted_PCA.png', all_plots,
base_height = 8,
base_aspect_ratio = 1.3) # make room for figure legend
all_plots <- wrap_plots(all_p) + plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 12, hjust = 0, vjust = 0)) &
ylim(-350, 300) &
xlim(-450, 400) &
ylab('PC1')
all_plots
all_plots <- wrap_plots(all_p) + plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A') &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 12, hjust = 0, vjust = 0)) &
ylim(-350, 300) &
xlim(-450, 400) &
ylab('PC2')
all_plots
getwd()
c_genome_pca
# PLOT
c_genome_pca <- plot(allc_logsvd_model, type = 'scores') +
geom_point(aes(colour = factor(
sample_species_c$type,
labels = c('B. napus',
'B. oleracea',
'Synthetic\nB. napus')
))) +
labs(colour = "Species") +
theme(legend.text = element_text(face = 'italic')) +
guides(colour=guide_legend(keywidth=0.1,
keyheight = 0.35,
default.unit='inch'))
library(logisticPCA)
library(ggfortify)
library(calibrate)
library(data.table)
library(ggplot2)
library(cowplot)
library(tidyverse)
library(ggtext)
library(patchwork)
theme_set(theme_cowplot())
# PLOT
c_genome_pca <- plot(allc_logsvd_model, type = 'scores') +
geom_point(aes(colour = factor(
sample_species_c$type,
labels = c('B. napus',
'B. oleracea',
'Synthetic\nB. napus')
))) +
labs(colour = "Species") +
theme(legend.text = element_text(face = 'italic')) +
guides(colour=guide_legend(keywidth=0.1,
keyheight = 0.35,
default.unit='inch'))
c_genome_pca
a_p
# plot A and C genome together
grid <- plot_grid(c_genome_pca,a_p,  nrow=2,labels='AUTO')
grid
save_plot(grid, filename='A_C_PAV.pca.png', base_height = 7, base_asp =1)
