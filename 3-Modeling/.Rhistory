tail(rapa_df)
head(rapa_df)
lm(logit(pangenome/63000) ~ Combinations, rapa_df)
para0p <- c(A=62000,B=-2.76,C=0.003)
rapa_summary_fitp <- nlsLM(pangenome~A*Combinations^B+C, data=rapa_df,
start=para0p, trace=T, control=list(maxiter=200, maxfev=1500))
para0p <- c(A=63000,B=-2.76,C=0.003)
rapa_summary_fitp <- nlsLM(pangenome~A*Combinations^B+C, data=rapa_df,
start=para0p, trace=F, control=list(maxiter=200, maxfev=1500))
lm(logit(pangenome/60000) ~ Combinations, rapa_df)
para0p <- c(A=60000,B=-2.76,C=0.003)
lm(logit(pangenome/60000) ~ Combinations, rapa_df)
para0p <- c(A=60000,B=-4.661,C=0.026)
rapa_summary_fitp <- nlsLM(pangenome~A*Combinations^B+C, data=rapa_df,
start=para0p, trace=F, control=list(maxiter=200, maxfev=1500))
para0p <- c(A=60000,B=4.661,C=0.026)
rapa_summary_fitp <- nlsLM(pangenome~A*Combinations^B+C, data=rapa_df,
start=para0p, trace=F, control=list(maxiter=200, maxfev=1500))
lm(logit(pangenome/59000) ~ Combinations, rapa_df)
para0p <- c(A=59000,B=-4.59,C=0.00022)
rapa_summary_fitp <- nlsLM(pangenome~A*Combinations^B+C, data=rapa_df,
start=para0p, trace=F, control=list(maxiter=200, maxfev=1500))
summary(rapa_summary_fitp)
tidy(rapa_summary_fitp)
para0c <- c(B=1)
rapa_fitc <- nls(core~cbind(1, exp(B*Combinations)),rapa_df, start=para0c,
trace=F, alg='plinear')
tidy(rapa_fitc)
rapa_fit_data_p <- augment(rapa_summary_fitp)
rapa_fit_data_c <- augment(rapa_fitc)
rapa_p <- ggplot() +
geom_point(data=rapa_df, aes(x=Combinations, y=pangenome), alpha=0.1) +
geom_point(data=rapa_df, aes(x=Combinations, y=core), alpha=0.1) +
geom_line(data=rapa_fit_data_p, aes(x=Combinations, y=.fitted, colour='red')) +
geom_line(data=rapa_fit_data_c, aes(x=Combinations, y=.fitted, colour='red')) +
ylab('Number of pangenome genes') +
xlab('Combinations of individuals') +
theme(legend.position = "none") +
theme(aspect.ratio = 1) +
theme_half_open() +
theme_minimal_hgrid() +
theme(legend.position="none")
rapa_p
napus_df <- read_tsv('./NewPAV_Table_nice_names_intersection_of_individuals.filtered.onlyInds.72Permuts.txt')
lm(logit(pangenome/max(napus_df$pangenome)) ~ Combinations, napus_df)
para0p <- c(A=max(napus_df$pangenome),B=-3.4844,C=0.003453)
napus_summary_fitp <- nlsLM(pangenome~A*Combinations^B+C, data=napus_df,
start=para0p, trace=F, control=list(maxiter=200, maxfev=1500))
lm(logit(pangenome/max(napus_df$pangenome)+1000) ~ Combinations, napus_df)
lm(logit(pangenome/max(napus_df$pangenome+1000) ~ Combinations, napus_df)
lm(logit(pangenome/(max(napus_df$pangenome)+1000 ~ Combinations, napus_df)
lm(logit(pangenome/(max(napus_df$pangenome)+1000) ~ Combinations, napus_df)
lm(logit(pangenome/(max(napus_df$pangenome)+1000)) ~ Combinations, napus_df)
para0p <- c(A=max(napus_df$pangenome)+1000,B=-4.277,C=0.007798)
napus_summary_fitp <- nlsLM(pangenome~A*Combinations^B+C, data=napus_df,
start=para0p, trace=F, control=list(maxiter=200, maxfev=1500))
lm(logit(pangenome/(max(napus_df$pangenome)+2000)) ~ Combinations, napus_df)
para0p <- c(A=max(napus_df$pangenome)+1000,B=-3.754,C=0.004609)
napus_summary_fitp <- nlsLM(pangenome~A*Combinations^B+C, data=napus_df,
start=para0p, trace=F, control=list(maxiter=200, maxfev=1500))
summary(napus_summary_fitp)
tidy(napus_summary_fitp)
para0c <- c(B=1)
napus_fitc <- nls(core~cbind(1, exp(B*Combinations)),napus_df, start=para0c,
trace=F, alg='plinear')
tidy(napus_fitc)
napus_fit_data_p <- augment(napus_summary_fitp)
napus_fit_data_c <- augment(napus_fitc)
napus_p <- ggplot() +
geom_point(data=napus_df, aes(x=Combinations, y=pangenome), alpha=0.1) +
geom_point(data=napus_df, aes(x=Combinations, y=core), alpha=0.1) +
geom_line(data=napus_fit_data_p, aes(x=Combinations, y=.fitted, colour='red')) +
geom_line(data=napus_fit_data_c, aes(x=Combinations, y=.fitted, colour='red')) +
ylab('Number of pangenome genes') +
xlab('Combinations of individuals') +
theme(legend.position = "none") +
theme(aspect.ratio=1) +
theme_half_open() +
theme_minimal_hgrid() +
theme(legend.position="none")
napus_p
grid <- plot_grid(oleracea_p, rapa_p, napus_p, labels='AUTO')
grid <- plot_grid(oleracea_p, rapa_p, napus_p, labels='AUTO')
grid
library(tidyverse)
library(cowplot)
library(minpack.lm)
library(broom)
library(car)
library(patchwork)
oleracea_df <- read_tsv('./Oleracea_PAV_nice_names_intersection_of_individuals.filtered.onlyInds.86Permuts.txt')
tail(oleracea_df)
max(oleracea_df)
# approximate the para0p
lm(logit(pangenome/60000) ~ Combinations, oleracea_df)
para0p <- c(A=60000,B=-3.36,C=0.002)
knitr::opts_chunk$set(echo = TRUE)
oleracea_summary_fitp <- nlsLM(pangenome~A*Combinations^B+C, data=oleracea_df,
start=para0p, trace=F, control=list(maxiter=200, maxfev=1500))
summary(oleracea_summary_fitp)
oleracea_summary_fitp <- nlsLM(pangenome~A*Combinations^B+C, data=oleracea_df,
start=para0p, trace=F, control=list(maxiter=200, maxfev=1500))
summary(oleracea_summary_fitp)
tidy(oleracea_summary_fitp)
para0c <- c(B=1)
oleracea_fitc <- nls(core~cbind(1, exp(B*Combinations)),oleracea_df, start=para0c,             trace=F, alg='plinear')
tidy(oleracea_fitc)
options('scipen'=100)
para0c <- c(B=1)
oleracea_fitc <- nls(core~cbind(1, exp(B*Combinations)),oleracea_df, start=para0c,             trace=F, alg='plinear')
tidy(oleracea_fitc)
rapa_df <- read_tsv('./Rapa_PAV_nice_names_intersection_of_individuals.filtered.onlyInds.71Permuts.txt')
head(rapa_df)
# approximate the para0p
lm(logit(pangenome/59000) ~ Combinations, rapa_df)
para0p <- c(A=59000,B=-4.59,C=0.00022)
rapa_summary_fitp <- nlsLM(pangenome~A*Combinations^B+C, data=rapa_df,
start=para0p, trace=F, control=list(maxiter=200, maxfev=1500))
summary(rapa_summary_fitp)
tidy(rapa_summary_fitp)
para0c <- c(B=1)
rapa_fitc <- nls(core~cbind(1, exp(B*Combinations)),rapa_df, start=para0c,
trace=F, alg='plinear')
tidy(rapa_fitc)
napus_df <- read_tsv('./NewPAV_Table_nice_names_intersection_of_individuals.filtered.onlyInds.72Permuts.txt')
# approximate the para0p
lm(logit(pangenome/(max(napus_df$pangenome)+2000)) ~ Combinations, napus_df)
para0p <- c(A=max(napus_df$pangenome)+1000,B=-3.754,C=0.004609)
napus_summary_fitp <- nlsLM(pangenome~A*Combinations^B+C, data=napus_df,
start=para0p, trace=F, control=list(maxiter=200, maxfev=1500))
summary(napus_summary_fitp)
tidy(napus_summary_fitp)
para0c <- c(B=1)
napus_fitc <- nls(core~cbind(1, exp(B*Combinations)),napus_df, start=para0c,
trace=F, alg='plinear')
tidy(napus_fitc)
knitr::opts_chunk$set(echo = TRUE)
napus_df <- read_tsv('./NewPAV_Table_nice_names_intersection_of_individuals.filtered.onlyInds.NoSynths.54Inds.txt')
library(tidyverse)
library(cowplot)
library(minpack.lm)
library(broom)
library(car)
library(patchwork)
napus_df <- read_tsv('./NewPAV_Table_nice_names_intersection_of_individuals.filtered.onlyInds.NoSynths.54Inds.txt')
napus_df <- read_tsv('./NewPAV_Table_nice_names_intersection_of_individuals.filtered.onlyInds.NoSynths.54Inds.txt')
tail(napus_df)
lm(logit(pangenome/132719) ~ Combinations, napus_df)
knitr::opts_chunk$set(echo = TRUE)
# approximate the para0p
max(napus_df$pangenome)
knitr::opts_chunk$set(echo = TRUE)
lm(logit(pangenome/110000) ~ Combinations, napus_df)
knitr::opts_chunk$set(echo = TRUE)
lm(logit(pangenome/110000) ~ Combinations, napus_df)
knitr::opts_chunk$set(echo = TRUE)
para0p <- c(A=110000, B=-3.756,C=0.0108)
napus_summary_fitp <- nlsLM(pangenome~A*Combinations^B+C, data=napus_df,
start=para0p, trace=F, control=list(maxiter=200, maxfev=1500))
knitr::opts_chunk$set(echo = TRUE)
lm(logit(pangenome/105000) ~ Combinations, napus_df)
knitr::opts_chunk$set(echo = TRUE)
para0p <- c(A=110000, B=-4.57,C=0.00022)
napus_summary_fitp <- nlsLM(pangenome~A*Combinations^B+C, data=napus_df,
start=para0p, trace=F, control=list(maxiter=200, maxfev=1500))
summary(napus_summary_fitp)
options('scipen'=100)
knitr::opts_chunk$set(echo = TRUE)
tidy(napus_summary_fitp)
para0c <- c(B=1)
napus_fitc <- nls(core~cbind(1, exp(B*Combinations)),napus_df, start=para0c,
trace=F, alg='plinear')
tidy(napus_fitc)
napus_fit_data_p <- augment(napus_summary_fitp)
napus_nonsyn_p <- ggplot() +
geom_point(data=napus_df, aes(x=Combinations, y=pangenome), alpha=0.1) +
geom_point(data=napus_df, aes(x=Combinations, y=core), alpha=0.1) +
geom_line(data=napus_fit_data_p, aes(x=Combinations, y=.fitted, colour='red')) +
geom_line(data=napus_fit_data_c, aes(x=Combinations, y=.fitted, colour='red')) +
ylab('Number of pangenome genes') +
xlab('Combinations of individuals') +
theme(legend.position = "none") +
theme(aspect.ratio=1) +
theme_half_open() +
theme_minimal_hgrid() +
theme(legend.position="none")
napus_fit_data_c <- augment(napus_fitc)
napus_nonsyn_p <- ggplot() +
geom_point(data=napus_df, aes(x=Combinations, y=pangenome), alpha=0.1) +
geom_point(data=napus_df, aes(x=Combinations, y=core), alpha=0.1) +
geom_line(data=napus_fit_data_p, aes(x=Combinations, y=.fitted, colour='red')) +
geom_line(data=napus_fit_data_c, aes(x=Combinations, y=.fitted, colour='red')) +
ylab('Number of pangenome genes') +
xlab('Combinations of individuals') +
theme(legend.position = "none") +
theme(aspect.ratio=1) +
theme_half_open() +
theme_minimal_hgrid() +
theme(legend.position="none")
napus_nonsyn_p
knitr::opts_chunk$set(echo = TRUE)
grid <- plot_grid(oleracea_p, rapa_p, napus_p, napus_nonsyn_p, labels='AUTO')
oleracea_df <- read_tsv('./Oleracea_PAV_nice_names_intersection_of_individuals.filtered.onlyInds.86Permuts.txt')
# approximate the para0p
lm(logit(pangenome/60000) ~ Combinations, oleracea_df)
para0p <- c(A=60000,B=-3.36,C=0.002)
oleracea_summary_fitp <- nlsLM(pangenome~A*Combinations^B+C, data=oleracea_df,
start=para0p, trace=F, control=list(maxiter=200, maxfev=1500))
summary(oleracea_summary_fitp)
tidy(oleracea_summary_fitp)
para0c <- c(B=1)
oleracea_fitc <- nls(core~cbind(1, exp(B*Combinations)),oleracea_df, start=para0c,             trace=F, alg='plinear')
tidy(oleracea_fitc)
oleracea_fit_data_p <- augment(oleracea_summary_fitp)
oleracea_fit_data_c <- augment(oleracea_fitc)
oleracea_p <-ggplot() +
geom_point(data=oleracea_df, aes(x=Combinations, y=pangenome), alpha=0.1) +
geom_point(data=oleracea_df, aes(x=Combinations, y=core), alpha=0.1) +
geom_line(data=oleracea_fit_data_p, aes(x=Combinations, y=.fitted, colour='red')) +
geom_line(data=oleracea_fit_data_c, aes(x=Combinations, y=.fitted, colour='red')) +
#xlim(c(0,50)) +
ylab('Number of pangenome genes') +
xlab('Combinations of individuals') +
theme(legend.position = "none") +
theme(aspect.ratio = 1) +
theme_half_open() +
theme_minimal_hgrid() +
theme(legend.position="none")
oleracea_p
rapa_df <- read_tsv('./Rapa_PAV_nice_names_intersection_of_individuals.filtered.onlyInds.71Permuts.txt')
head(rapa_df)
# approximate the para0p
lm(logit(pangenome/59000) ~ Combinations, rapa_df)
para0p <- c(A=59000,B=-4.59,C=0.00022)
rapa_summary_fitp <- nlsLM(pangenome~A*Combinations^B+C, data=rapa_df,
start=para0p, trace=F, control=list(maxiter=200, maxfev=1500))
summary(rapa_summary_fitp)
tidy(rapa_summary_fitp)
para0c <- c(B=1)
rapa_fitc <- nls(core~cbind(1, exp(B*Combinations)),rapa_df, start=para0c,
trace=F, alg='plinear')
tidy(rapa_fitc)
rapa_fit_data_p <- augment(rapa_summary_fitp)
rapa_fit_data_c <- augment(rapa_fitc)
rapa_p <- ggplot() +
geom_point(data=rapa_df, aes(x=Combinations, y=pangenome), alpha=0.1) +
geom_point(data=rapa_df, aes(x=Combinations, y=core), alpha=0.1) +
geom_line(data=rapa_fit_data_p, aes(x=Combinations, y=.fitted, colour='red')) +
geom_line(data=rapa_fit_data_c, aes(x=Combinations, y=.fitted, colour='red')) +
ylab('Number of pangenome genes') +
xlab('Combinations of individuals') +
theme(legend.position = "none") +
theme(aspect.ratio = 1) +
theme_half_open() +
theme_minimal_hgrid() +
theme(legend.position="none")
rapa_p
napus_df <- read_tsv('./NewPAV_Table_nice_names_intersection_of_individuals.filtered.onlyInds.72Permuts.txt')
# approximate the para0p
lm(logit(pangenome/(max(napus_df$pangenome)+2000)) ~ Combinations, napus_df)
para0p <- c(A=max(napus_df$pangenome)+1000,B=-3.754,C=0.004609)
napus_summary_fitp <- nlsLM(pangenome~A*Combinations^B+C, data=napus_df,
start=para0p, trace=F, control=list(maxiter=200, maxfev=1500))
summary(napus_summary_fitp)
tidy(napus_summary_fitp)
para0c <- c(B=1)
napus_fitc <- nls(core~cbind(1, exp(B*Combinations)),napus_df, start=para0c,
trace=F, alg='plinear')
tidy(napus_fitc)
napus_fit_data_p <- augment(napus_summary_fitp)
napus_fit_data_c <- augment(napus_fitc)
napus_p <- ggplot() +
geom_point(data=napus_df, aes(x=Combinations, y=pangenome), alpha=0.1) +
geom_point(data=napus_df, aes(x=Combinations, y=core), alpha=0.1) +
geom_line(data=napus_fit_data_p, aes(x=Combinations, y=.fitted, colour='red')) +
geom_line(data=napus_fit_data_c, aes(x=Combinations, y=.fitted, colour='red')) +
ylab('Number of pangenome genes') +
xlab('Combinations of individuals') +
theme(legend.position = "none") +
theme(aspect.ratio=1) +
theme_half_open() +
theme_minimal_hgrid() +
theme(legend.position="none")
napus_p
napus_df <- read_tsv('./NewPAV_Table_nice_names_intersection_of_individuals.filtered.onlyInds.NoSynths.54Inds.txt')
tail(napus_df)
# approximate the para0p
max(napus_df$pangenome)
lm(logit(pangenome/105000) ~ Combinations, napus_df)
para0p <- c(A=110000, B=-4.57,C=0.00022)
napus_summary_fitp <- nlsLM(pangenome~A*Combinations^B+C, data=napus_df,
start=para0p, trace=F, control=list(maxiter=200, maxfev=1500))
summary(napus_summary_fitp)
tidy(napus_summary_fitp)
para0c <- c(B=1)
napus_fitc <- nls(core~cbind(1, exp(B*Combinations)),napus_df, start=para0c,
trace=F, alg='plinear')
tidy(napus_fitc)
napus_fit_data_p <- augment(napus_summary_fitp)
napus_fit_data_c <- augment(napus_fitc)
napus_nonsyn_p <- ggplot() +
geom_point(data=napus_df, aes(x=Combinations, y=pangenome), alpha=0.1) +
geom_point(data=napus_df, aes(x=Combinations, y=core), alpha=0.1) +
geom_line(data=napus_fit_data_p, aes(x=Combinations, y=.fitted, colour='red')) +
geom_line(data=napus_fit_data_c, aes(x=Combinations, y=.fitted, colour='red')) +
ylab('Number of pangenome genes') +
xlab('Combinations of individuals') +
theme(legend.position = "none") +
theme(aspect.ratio=1) +
theme_half_open() +
theme_minimal_hgrid() +
theme(legend.position="none")
napus_nonsyn_p
grid <- plot_grid(oleracea_p, rapa_p, napus_p, napus_nonsyn_p, labels='AUTO')
grid
save_plot(filename= 'Grid.png', plot = grid, base_height = 8)
knitr::opts_chunk$set(echo = TRUE)
napus_p <- ggplot() +
geom_point(data=napus_df, aes(x=Combinations, y=pangenome), alpha=0.1) +
geom_point(data=napus_df, aes(x=Combinations, y=core), alpha=0.1) +
geom_line(data=napus_fit_data_p, aes(x=Combinations, y=.fitted, colour='red')) +
geom_line(data=napus_fit_data_c, aes(x=Combinations, y=.fitted, colour='red')) +
ylab('Number of pangenome genes') +
xlab('Combinations of individuals') +
theme(legend.position = "none") +
theme(aspect.ratio=1) +
theme_half_open() +
theme_minimal_hgrid() +
theme(legend.position="none") +
ylim(c(65000, 110000))
napus_p
napus_nonsyn_p <- ggplot() +
geom_point(data=napus_df, aes(x=Combinations, y=pangenome), alpha=0.1) +
geom_point(data=napus_df, aes(x=Combinations, y=core), alpha=0.1) +
geom_line(data=napus_fit_data_p, aes(x=Combinations, y=.fitted, colour='red')) +
geom_line(data=napus_fit_data_c, aes(x=Combinations, y=.fitted, colour='red')) +
ylab('Number of pangenome genes') +
xlab('Combinations of individuals') +
theme(legend.position = "none") +
theme(aspect.ratio=1) +
theme_half_open() +
theme_minimal_hgrid() +
theme(legend.position="none") +
ylim(c(65000, 110000))
napus_nonsyn_p
knitr::opts_chunk$set(echo = TRUE)
napus_p <- ggplot() +
geom_point(data=napus_df, aes(x=Combinations, y=pangenome), alpha=0.1) +
geom_point(data=napus_df, aes(x=Combinations, y=core), alpha=0.1) +
geom_line(data=napus_fit_data_p, aes(x=Combinations, y=.fitted, colour='red')) +
geom_line(data=napus_fit_data_c, aes(x=Combinations, y=.fitted, colour='red')) +
ylab('Number of pangenome genes') +
xlab('Combinations of individuals') +
theme(legend.position = "none") +
theme(aspect.ratio=1) +
theme_half_open() +
theme_minimal_hgrid() +
theme(legend.position="none") +
ylim(c(80000, 110000))
napus_p
knitr::opts_chunk$set(echo = TRUE)
napus_nonsyn_p <- ggplot() +
geom_point(data=napus_df, aes(x=Combinations, y=pangenome), alpha=0.1) +
geom_point(data=napus_df, aes(x=Combinations, y=core), alpha=0.1) +
geom_line(data=napus_fit_data_p, aes(x=Combinations, y=.fitted, colour='red')) +
geom_line(data=napus_fit_data_c, aes(x=Combinations, y=.fitted, colour='red')) +
ylab('Number of pangenome genes') +
xlab('Combinations of individuals') +
theme(legend.position = "none") +
theme(aspect.ratio=1) +
theme_half_open() +
theme_minimal_hgrid() +
theme(legend.position="none") +
ylim(c(80000, 110000))
napus_nonsyn_p
grid <- plot_grid(oleracea_p, rapa_p, napus_p, napus_nonsyn_p, labels='AUTO')
grid <- plot_grid(oleracea_p, rapa_p, napus_p, napus_nonsyn_p, labels='AUTO')
grid
```{r napus_model}
napus_df <- read_tsv('./NewPAV_Table_nice_names_intersection_of_individuals.filtered.onlyInds.72Permuts.txt')
# approximate the para0p
lm(logit(pangenome/(max(napus_df$pangenome)+2000)) ~ Combinations, napus_df)
para0p <- c(A=max(napus_df$pangenome)+1000,B=-3.754,C=0.004609)
```
OK we got the initaliser
```{r napus_training}
napus_summary_fitp <- nlsLM(pangenome~A*Combinations^B+C, data=napus_df,
start=para0p, trace=F, control=list(maxiter=200, maxfev=1500))
summary(napus_summary_fitp)
tidy(napus_summary_fitp)
```
Now come the core genes!
```{r napus_core}
para0c <- c(B=1)
napus_fitc <- nls(core~cbind(1, exp(B*Combinations)),napus_df, start=para0c,
trace=F, alg='plinear')
tidy(napus_fitc)
```
```{r napus_plot}
napus_fit_data_p <- augment(napus_summary_fitp)
napus_fit_data_c <- augment(napus_fitc)
napus_p <- ggplot() +
geom_point(data=napus_df, aes(x=Combinations, y=pangenome), alpha=0.1) +
geom_point(data=napus_df, aes(x=Combinations, y=core), alpha=0.1) +
geom_line(data=napus_fit_data_p, aes(x=Combinations, y=.fitted, colour='red')) +
geom_line(data=napus_fit_data_c, aes(x=Combinations, y=.fitted, colour='red')) +
ylab('Number of pangenome genes') +
xlab('Combinations of individuals') +
theme(legend.position = "none") +
theme(aspect.ratio=1) +
theme_half_open() +
theme_minimal_hgrid() +
theme(legend.position="none") +
ylim(c(80000, 110000))
napus_p
```
## Napus no synths model
```{r napus_model}
napus_df <- read_tsv('./NewPAV_Table_nice_names_intersection_of_individuals.filtered.onlyInds.NoSynths.54Inds.txt')
tail(napus_df)
# approximate the para0p
max(napus_df$pangenome)
lm(logit(pangenome/105000) ~ Combinations, napus_df)
```
OK we got the initaliser
```{r napus_training}
para0p <- c(A=110000, B=-4.57,C=0.00022)
napus_summary_fitp <- nlsLM(pangenome~A*Combinations^B+C, data=napus_df,
start=para0p, trace=F, control=list(maxiter=200, maxfev=1500))
summary(napus_summary_fitp)
tidy(napus_summary_fitp)
```
Now come the core genes!
```{r napus_core}
para0c <- c(B=1)
napus_fitc <- nls(core~cbind(1, exp(B*Combinations)),napus_df, start=para0c,
trace=F, alg='plinear')
tidy(napus_fitc)
```
```{r napus_plot}
napus_fit_data_p <- augment(napus_summary_fitp)
napus_fit_data_c <- augment(napus_fitc)
napus_nonsyn_p <- ggplot() +
geom_point(data=napus_df, aes(x=Combinations, y=pangenome), alpha=0.1) +
geom_point(data=napus_df, aes(x=Combinations, y=core), alpha=0.1) +
geom_line(data=napus_fit_data_p, aes(x=Combinations, y=.fitted, colour='red')) +
geom_line(data=napus_fit_data_c, aes(x=Combinations, y=.fitted, colour='red')) +
ylab('Number of pangenome genes') +
xlab('Combinations of individuals') +
theme(legend.position = "none") +
theme(aspect.ratio=1) +
theme_half_open() +
theme_minimal_hgrid() +
theme(legend.position="none") +
ylim(c(80000, 110000))
napus_nonsyn_p
```
# Patchworking!
```{r patches}
grid <- plot_grid(oleracea_p, rapa_p, napus_p, napus_nonsyn_p, labels='AUTO')
grid
knitr::opts_chunk$set(echo = TRUE)
rapa_p <- ggplot() +
geom_point(data=rapa_df, aes(x=Combinations, y=pangenome), alpha=0.1) +
geom_point(data=rapa_df, aes(x=Combinations, y=core), alpha=0.1) +
geom_line(data=rapa_fit_data_p, aes(x=Combinations, y=.fitted, colour='red')) +
geom_line(data=rapa_fit_data_c, aes(x=Combinations, y=.fitted, colour='red')) +
ylab('Number of pangenome genes') +
xlab('Combinations of individuals') +
theme(legend.position = "none") +
theme(aspect.ratio = 1) +
theme_half_open() +
theme_minimal_hgrid() +
theme(legend.position="none") +
ylim(c(39000, 60000))
rapa_fit_data_p <- augment(rapa_summary_fitp)
rapa_fit_data_c <- augment(rapa_fitc)
rapa_p <- ggplot() +
geom_point(data=rapa_df, aes(x=Combinations, y=pangenome), alpha=0.1) +
geom_point(data=rapa_df, aes(x=Combinations, y=core), alpha=0.1) +
geom_line(data=rapa_fit_data_p, aes(x=Combinations, y=.fitted, colour='red')) +
geom_line(data=rapa_fit_data_c, aes(x=Combinations, y=.fitted, colour='red')) +
ylab('Number of pangenome genes') +
xlab('Combinations of individuals') +
theme(legend.position = "none") +
theme(aspect.ratio = 1) +
theme_half_open() +
theme_minimal_hgrid() +
theme(legend.position="none") +
ylim(c(39000, 60000))
rapa_p
knitr::opts_chunk$set(echo = TRUE)
oleracea_p <-ggplot() +
geom_point(data=oleracea_df, aes(x=Combinations, y=pangenome), alpha=0.1) +
geom_point(data=oleracea_df, aes(x=Combinations, y=core), alpha=0.1) +
geom_line(data=oleracea_fit_data_p, aes(x=Combinations, y=.fitted, colour='red')) +
geom_line(data=oleracea_fit_data_c, aes(x=Combinations, y=.fitted, colour='red')) +
#xlim(c(0,50)) +
ylab('Number of pangenome genes') +
xlab('Combinations of individuals') +
theme(legend.position = "none") +
theme(aspect.ratio = 1) +
theme_half_open() +
theme_minimal_hgrid() +
theme(legend.position="none")+
ylim(c(39000, 60000))
oleracea_p
?nls
?glm
knitr::opts_chunk$set(echo = TRUE)
?logit
head(oleracea_df)
